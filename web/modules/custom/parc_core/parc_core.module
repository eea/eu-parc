<?php

/**
 * @file
 * Contains hooks and custom functions for Parc Core module.
 */

use Drupal\Core\Form\FormStateInterface;
  use Drupal\Core\Url;
  use Drupal\file\Entity\File;
  use Drupal\node\Entity\Node;
use Drupal\menu_link_content\MenuLinkContentInterface;
use Drupal\parc_core\ParcCoreViews;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_preprocess_page().
 */
function parc_core_preprocess_page(&$variables) {
  $node = $variables['node'] ?? NULL;
  if ($node instanceof Node) {
    $variables['#attached']['library'][] = 'parc_core/ajax_links';
  }

}

/**
 * Implements template_preprocess_menu().
 */
function parc_core_preprocess_menu(&$variables) {
  $items = $variables['items'];
  foreach ($items as $item) {
    /** @var \Drupal\Core\Menu\MenuLinkInterface $menu_link */
    $menu_link = $item['original_link'] ?? NULL;
    if (!empty($menu_link)) {
      $options = ($menu_link instanceof MenuLinkContentInterface) ?
        $menu_link->link->first()->options : $menu_link->getOptions();
      if (!empty($options['attributes']['data-enable-ajax']) &&
        $options['attributes']['data-enable-ajax'] == 'true') {
        if ('entity.node.canonical' == $menu_link->getRouteName()) {
          $params = $menu_link->getRouteParameters();
          $nid = $params['node'];
        }
        // Set ajax link attributes.
        $attributes = [
          'class' => 'ajax-link',
          'data-ajax-link-after-execution' => 'false',
          'data-ajax-link-selector' => '.node--basic-page--compact',
          'data-ajax-link-history' => 1,
          'nid' => $nid ?? NULL,
        ] + $options['attributes'];
        $item['url']->setOption('attributes', $attributes);
      }
    }
  }
}

/**
 * Implements hook_views_pre_render().
 */
function parc_core_views_pre_render(ViewExecutable $view) {
  return \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(ParcCoreViews::class)
    ->viewsPreRender($view);
}

/**
 * Change the title of the "Company" field to "Institution".
 */
function parc_core_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['node_events_edit_form', 'node_events_form'])) {
    $form['#attached']['library'][] = 'parc_core/edit_node_event';
  }
}

  /**
   * Implement hook_metatags_attachments_alter().
   * @param $attachements
   *
   * @return void
   */
  function parc_core_metatags_attachments_alter($attachements) {

  }

  /**
   * Implement hook_metatags_alter().
   * @param array $metatags
   * @param array $context
   *
   * @return void
   */
  function parc_core_metatags_alter(array &$metatags, array &$context) {

    $currentRouteMatchService = \Drupal::service('current_route_match');
    $routeName = $currentRouteMatchService->getRouteName();
    if ($routeName == 'view.publications.page_publications') {
      $pathCurrentService = \Drupal::service('path.current');
      $current_path = $pathCurrentService->getPath();
      $request = \Drupal::request();
      $queryParameters = $request->query->all();
      if ($current_path == '/scientific-publications') {
        if ($metatags) {
          if ($queryParameters['publication-anchor']) {
            $nid = $queryParameters['publication-anchor'];
            $node = Node::load($nid);
            $image_full_url = '';
            $body = '';
            $title = '';
            $site_name = \Drupal::config('system.site')->get('name');
            $base_url = \Drupal::request()->getSchemeAndHttpHost();
            if ($node) {
              if ($node->hasField('field_cover') && !$node->get('field_cover')->isEmpty())
              $image_media = $node->field_cover->entity;
              if ($image_media) {
                $fid = $image_media->getSource()->getSourceFieldValue($image_media);
                $file = File::load($fid);
                if ($file) {
                  $uri = $file->getFileUri();
                  $url = \Drupal::service('file_url_generator')->generateString($uri);
                  $image_full_url = $base_url . $url;
                }
              } else {
                $image_full_url = $base_url . '/themes/custom/parc/img/sp-default.png';
              }
              $title = $node->getTitle();
              if ($node->hasField('body') && !empty($node->get('body')->getValue())) {
                $body = $node->body->getValue()[0]['value'];
              }
              $full_node_share_url = $base_url . $current_path . '?publication-anchor=' . $nid . '#publication-anchor-' . $nid;
              foreach ($metatags as $key => $attachement) {
                switch ($key) {
                  case 'canonical_url':
                  case 'og_url':
                  case 'twitter_cards_page_url':
                    $metatags[$key] = $full_node_share_url;
                    break;
                  case 'title':
                  case 'og_title':
                  case 'twitter_cards_title':
                    $metatags[$key] = $title . ' | ' . $site_name;
                    break;
                  case 'description':
                  case 'og_description':
                    $metatags[$key] = $body;
                    break;
                  case 'og_image':
                  case 'og_image_url':
                  case 'twitter_cards_image':
                    $metatags[$key] = $image_full_url;
                    break;
                }
              }
            }
          }
        }
      }
    }
  }
