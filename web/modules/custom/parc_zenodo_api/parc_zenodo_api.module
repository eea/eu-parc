<?php

/**
 * @file
 * Handle PARC Zenodo API integration.
 */

/**
 * Implements hook_cron().
 */
function parc_zenodo_api_cron() {
  /** @var \Drupal\parc_zenodo_api\ZenodoApiHelper $zenodo_api */
  $zenodo_api = \Drupal::service('parc_zenodo_api.helper');
  $depositions = $zenodo_api->getAllRecords();
  $bundle = 'publications';
  if ($depositions !== NULL && !empty($depositions)) {
    foreach ($depositions as $records) {
      foreach ($records['hits']['hits'] as $deposition) {
        if ($deposition['metadata']['resource_type']['type'] != 'publication') {
          continue;
        }

        $deposition_id = $deposition['id'];

        // Check if Publications exists on local
        // and if the Updated Date field is changed.
        $results = \Drupal::entityTypeManager()
          ->getStorage('node')
          ->loadByProperties([
            'type' => $bundle,
            'field_zenodo_id' => $deposition_id,
          ]);
        if ($results == NULL) {
          try {
            $zenodo_api->createPublication($deposition);
          }
          catch (Exception $e) {
            \Drupal::logger('parc_zenodo_api')->error($e->getMessage());
          }
        }
        // phpcs:disable
        // Remove the Update of the Publications, to pull the latest ones created.
        // And not to update the ones existing in Drupal already.
        // else {
        //   foreach ($results as $val) {
        //     $node = $val;
        //   }
        //   if ($zenodo_api->checkPublicationUpdated($deposition['modified'], $node)) {
        //     try {
        //       $zenodo_api->updatePublication($deposition, $node);
        //     }
        //     catch (Exception $e) {
        //       \Drupal::logger('parc_zenodo_api')->error($e->getMessage());
        //     }
        //   }
        // }
        // phpcs:enable
      }
    }
  }
  else {
    \Drupal::logger('Zenodo API')->notice('Could not connect to ZENODO API.');
  }
}
